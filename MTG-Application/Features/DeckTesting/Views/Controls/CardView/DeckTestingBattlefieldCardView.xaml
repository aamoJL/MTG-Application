<?xml version="1.0" encoding="utf-8"?>
<local:DeckTestingCardViewBase
  x:Class="MTGApplication.Features.DeckTesting.Views.Controls.CardView.DeckTestingBattlefieldCardView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:MTGApplication.Features.DeckTesting.Views.Controls.CardView"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:ui="using:CommunityToolkit.WinUI.UI" 
  xmlns:converters="using:MTGApplication.General.Views.BindingHelpers.Converters" 
  xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
  mc:Ignorable="d">

  <local:DeckTestingCardViewBase.Resources>
    <converters:PlusCounterConverter x:Key="PlusCounterConverter"/>
    <converters:IntMoreThanToVisibilityConverter x:Key="IntMoreThanToVisibilityConverter"/>
    <converters:BoolToDoubleConverter x:Key="BoolToDoubleConverter"/>
  </local:DeckTestingCardViewBase.Resources>

  <Grid RenderTransformOrigin="0.5,0.5">
    
    <Grid.RenderTransform>
      <RotateTransform Angle="{x:Bind IsTapped, Converter={StaticResource BoolToDoubleConverter}, ConverterParameter='90', Mode=OneWay}"/>
    </Grid.RenderTransform>

    <!--#region Image -->
    <controls:ImageEx 
      MaxWidth="{x:Bind CardWidth, Mode=OneTime}"
      MaxHeight="{x:Bind CardHeight, Mode=OneTime}"
      CornerRadius="12"
      CacheMode="BitmapCache"
      IsCacheEnabled="True"
      Source="{x:Bind SelectedFaceUri, Mode=OneWay}"
      Style="{StaticResource PreviewImagePlaceholderStyle}">
      <controls:ImageEx.ContextFlyout>
        <CommandBarFlyout AlwaysExpanded="True" Placement="RightEdgeAlignedTop">
          <CommandBarFlyout.PrimaryCommands>
            <AppBarButton Command="{x:Bind SwitchFaceImageCommand, Mode=OneTime}" Icon="sync" ToolTipService.ToolTip="Flip" IsCompact="True"/>
            <AppBarSeparator />
            <AppBarButton Command="{x:Bind OpenAPIWebsiteCommand, Mode=OneTime}" Icon="{ui:BitmapIcon Source='/Assets/scryfallIcon.png', ShowAsMonochrome=True}" ToolTipService.ToolTip="{x:Bind Model.Info.ImporterName, Mode=OneWay}" IsCompact="True"/>
            <AppBarButton Command="{x:Bind OpenCardmarketWebsiteCommand, Mode=OneTime}" Icon="{ui:BitmapIcon Source='/Assets/CardmarketLogo.png', ShowAsMonochrome=True}" ToolTipService.ToolTip="Cardmarket" IsCompact="True"/>
          </CommandBarFlyout.PrimaryCommands>
          <CommandBarFlyout.SecondaryCommands>
            <AppBarButton Label="Toggle +1/+1 counters" Click="PlusCounterFlyoutButton_Click"/>
            <AppBarButton Label="Toggle count counters" Click="CountCounterFlyoutButton_Click"/>
          </CommandBarFlyout.SecondaryCommands>
        </CommandBarFlyout>
      </controls:ImageEx.ContextFlyout>
    </controls:ImageEx>
    <!--#endregion-->

    <!--#region Plus Counters -->
    <Grid
      Margin="25 40" 
      Width="50"
      Height="50"
      HorizontalAlignment="Left" 
      VerticalAlignment="Top"
      RenderTransformOrigin="0.5,0.5"
      Visibility="{x:Bind PlusCounterVisibility, Mode=OneWay}"
      PointerWheelChanged="PlusCounter_PointerWheelChanged">
      <Grid.RenderTransform>
        <RotateTransform Angle="{x:Bind IsTapped, Converter={StaticResource BoolToDoubleConverter}, ConverterParameter='-90', Mode=OneWay}"/>
      </Grid.RenderTransform>
      <Ellipse>
        <Ellipse.Fill>
          <RadialGradientBrush
            Center="0.5,0.5"
            InterpolationSpace="RgbLinear"
            GradientOrigin="0.35,0.35"
            Opacity=".7"
            RadiusX="0.5"
            RadiusY="0.5"
            SpreadMethod="Pad">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="Red" Offset="0.1" />
            <GradientStop Color="#B00000" Offset="0.8" />
            <GradientStop Color="#500000" Offset="1" />
          </RadialGradientBrush>
        </Ellipse.Fill>
      </Ellipse>
      <TextBlock 
        Text="{x:Bind PlusCounters, Converter={StaticResource PlusCounterConverter}, Mode=OneWay}" 
        VerticalAlignment="Center" 
        HorizontalAlignment="Center"
        Margin="0 0 5 5"
        Foreground="White"
        FontSize="24"
        FontWeight="Bold">
      </TextBlock>
    </Grid>
    <!--#endregion-->

    <!--#region Count Counters-->
    <Grid 
      Margin="25 40" 
      Width="50"
      Height="50"
      HorizontalAlignment="Right" 
      VerticalAlignment="Top"
      RenderTransformOrigin="0.5,0.5"
      Visibility="{x:Bind CountCounterVisibility, Mode=OneWay}"
      PointerWheelChanged="CountCounter_PointerWheelChanged">
      <Grid.RenderTransform>
        <RotateTransform Angle="{x:Bind IsTapped, Converter={StaticResource BoolToDoubleConverter}, ConverterParameter='-90', Mode=OneWay}"/>
      </Grid.RenderTransform>
      <Ellipse>
        <Ellipse.Fill>
          <RadialGradientBrush
            Center="0.5,0.5"
            InterpolationSpace="RgbLinear"
            GradientOrigin="0.35,0.35"
            Opacity=".7"
            RadiusX="0.5"
            RadiusY="0.5"
            SpreadMethod="Pad">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="Blue" Offset="0.1" />
            <GradientStop Color="#0000B0" Offset="0.8" />
            <GradientStop Color="#000050" Offset="1" />
          </RadialGradientBrush>
        </Ellipse.Fill>
      </Ellipse>
      <TextBlock 
        Text="{x:Bind CountCounters, Mode=OneWay}" 
        VerticalAlignment="Center" 
        HorizontalAlignment="Center"
        Margin="0 0 0 5"
        Foreground="White"
        FontSize="24"
        FontWeight="Bold">
      </TextBlock>
    </Grid>
    <!--#endregion-->

  </Grid>
</local:DeckTestingCardViewBase>
