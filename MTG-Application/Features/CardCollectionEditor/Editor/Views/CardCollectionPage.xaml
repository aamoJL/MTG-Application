<?xml version="1.0" encoding="utf-8"?>
<Page
  x:Name="Root"
  x:Class="MTGApplication.Features.CardCollectionEditor.Editor.Views.CardCollectionPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:controls="using:CommunityToolkit.WinUI.Controls" 
  xmlns:helpers="using:MTGApplication.General.Views.BindingHelpers" 
  xmlns:sys="using:System"
  xmlns:customControls="using:MTGApplication.General.Views.Controls"
  xmlns:ui="using:CommunityToolkit.WinUI"
  xmlns:converters="using:MTGApplication.Features.CardCollectionEditor.CardCollectionList.Views.Controls.Converters" 
  xmlns:localControls="using:MTGApplication.Features.CardCollectionEditor.CardCollectionList.Views.Controls" 
  xmlns:models="using:MTGApplication.Features.CardCollectionEditor.CardCollectionList.Models"
  xmlns:listViewmodels="using:MTGApplication.Features.CardCollectionEditor.CardCollectionList.ViewModels" 
  xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
  mc:Ignorable="d"
  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
  KeyboardAcceleratorPlacementMode="Hidden">

  <Page.Resources>
    <converters:BoolToSelectionModeConverter x:Key="BoolToSelectionModeConverter" />
  </Page.Resources>

  <!--#region Keyboard Accelerators -->
  <!--NOTE: KeyboardAccelerators needs to be here because menu flyout accelerators does not work if the flyout has not been opened-->
  <Page.KeyboardAccelerators>
    <KeyboardAccelerator Modifiers="Control" Key="N" Invoked="NewCollectionKeyboardAccelerator_Invoked" />
    <KeyboardAccelerator Modifiers="Control" Key="S" Invoked="SaveCollectionKeyboardAccelerator_Invoked" />
    <KeyboardAccelerator Modifiers="Control" Key="O" Invoked="OpenCollectionKeyboardAccelerator_Invoked" />
  </Page.KeyboardAccelerators>
  <!--#endregion-->

  <Grid>

    <!--#region Visual State Manager -->
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup x:Name="CollectionNameTitleSaveState">
        <!--NOTE: Changes name text to "Unsaved" if the collection has no name-->
        <VisualState>
          <VisualState.StateTriggers>
            <ui:IsEqualStateTrigger Value="{x:Bind ViewModel.CollectionName, Mode=OneWay}" To="{x:Bind sys:String.Empty}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SelectedCollectionNameTitle.Text" Value="Unsaved" />
            <Setter Target="SelectedCollectionNameTitle.FontStyle" Value="Italic" />
            <Setter Target="SelectedCollectionNameTitle.Foreground" Value="LightGray" />
          </VisualState.Setters>
        </VisualState>

        <!--NOTE: Changes name text to different color to show that the collection has unsaved changes-->
        <VisualState>
          <VisualState.StateTriggers>
            <ui:IsEqualStateTrigger Value="{x:Bind ViewModel.HasUnsavedChanges, Mode=OneWay}" To="True" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SelectedCollectionNameTitle.Foreground" Value="{ThemeResource SystemAccentColorLight1}" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    <!--#endregion-->

    <controls:DockPanel LastChildFill="True" Padding="0 0 0 10">

      <!--#region Command bar -->
      <Grid controls:DockPanel.Dock="Top" BorderThickness="0 0 0 1" BorderBrush="{ThemeResource RegionColor}">
        <StackPanel Orientation="Horizontal">

          <!--#region File: Collection -->
          <AppBarButton Label="Collection">
            <AppBarButton.Icon>
              <FontIcon Glyph="&#xE8E5;" />
            </AppBarButton.Icon>
            <AppBarButton.Flyout>
              <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
                <MenuFlyoutItem Text="New" Command="{x:Bind ViewModel.NewCollectionCommand, Mode=OneTime}" KeyboardAcceleratorTextOverride="Ctrl+N" />
                <MenuFlyoutItem Text="Open..." Command="{x:Bind ViewModel.OpenCollectionCommand, Mode=OneTime}" KeyboardAcceleratorTextOverride="Ctrl+O" />
                <MenuFlyoutItem x:Name="SaveButton" Text="Save..." Command="{x:Bind ViewModel.SaveCollectionCommand, Mode=OneTime}" KeyboardAcceleratorTextOverride="Ctrl+S" />
                <MenuFlyoutSeparator />
                <MenuFlyoutItem Text="Delete Collection" Command="{x:Bind ViewModel.DeleteCollectionCommand, Mode=OneTime}" Background="IndianRed" />
              </MenuFlyout>
            </AppBarButton.Flyout>
          </AppBarButton>
          <!--#endregion-->

          <AppBarSeparator />

          <!--#region File: List -->
          <AppBarButton Label="List">
            <AppBarButton.Icon>
              <FontIcon Glyph="&#xE8E5;" />
            </AppBarButton.Icon>
            <AppBarButton.Flyout>
              <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
                <MenuFlyoutItem Text="New..." Command="{x:Bind ViewModel.NewListCommand, Mode=OneTime}" />
                <MenuFlyoutItem Text="Edit..." Command="{x:Bind ViewModel.EditListCommand, Mode=OneTime}" CommandParameter="{x:Bind ViewModel.SelectedCardCollectionListViewModel.CollectionList, Mode=OneWay}"/>
                <MenuFlyoutSeparator />
                <MenuFlyoutItem Text="Import..." Command="{x:Bind ViewModel.SelectedCardCollectionListViewModel.ImportCardsCommand, Mode=OneTime}" />
                <MenuFlyoutItem Text="Export..." Command="{x:Bind ViewModel.SelectedCardCollectionListViewModel.ExportCardsCommand, Mode=OneTime}" />
                <MenuFlyoutSeparator />
                <MenuFlyoutItem Text="Delete List" Command="{x:Bind ViewModel.DeleteListCommand, Mode=OneTime}" CommandParameter="{x:Bind ViewModel.SelectedCardCollectionListViewModel.CollectionList, Mode=OneWay}" Background="IndianRed" />
              </MenuFlyout>
            </AppBarButton.Flyout>
          </AppBarButton>
          <!--#endregion-->

          <!--#region List Selector-->
          <customControls:ComboBoxWithCommands
            ItemsSource="{x:Bind ViewModel.Collection.CollectionLists, Mode=OneWay}"
            SelectedItem="{x:Bind ViewModel.SelectedCardCollectionListViewModel.CollectionList, Mode=OneWay}"
            SelectionChangedCommand="{x:Bind ViewModel.ChangeListCommand, Mode=OneTime}"
            VerticalAlignment="Center"
            Width="200"
            Margin="5 0 5 0"
            IsEnabled="{x:Bind helpers:Comparison.MoreThan(ViewModel.Collection.CollectionLists.Count, 0), Mode=OneWay}">
            <ComboBox.ItemTemplate>
              <DataTemplate x:DataType="models:MTGCardCollectionList">
                <TextBlock Text="{Binding Name, Mode=OneWay}" />
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </customControls:ComboBoxWithCommands>
          <!--#endregion-->

          <AppBarSeparator />

          <!--#region Collection Info -->
          <StackPanel Orientation="Vertical" VerticalAlignment="Center" Margin="10 0 0 0">
            <TextBlock x:Name="SelectedCollectionNameTitle" Text="{x:Bind ViewModel.CollectionName, Mode=OneWay}" FontWeight="Bold" />
            <TextBlock>
              <Run Text="{x:Bind sys:String.Format('{0} /', ViewModel.SelectedCardCollectionListViewModel.OwnedCount), Mode=OneWay}" />
              <Run Text="{x:Bind sys:String.Format('{0} cards collected', ViewModel.SelectedCardCollectionListViewModel.TotalCount), Mode=OneWay}" />
            </TextBlock>
          </StackPanel>
          <!--#endregion-->

          <ProgressRing IsActive="{x:Bind ViewModel.IsBusy, Mode=OneWay}" Margin="10 0 0 0" />
        </StackPanel>

        <!--#region Card View Information -->
        <Grid HorizontalAlignment="Right" Margin="0 5 5 0">
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Spacing="5">
            <ToggleButton x:Name="SingleTapSelectionModeSwitch" ToolTipService.ToolTip="Single tap">
              <FontIcon Glyph="&#xE815;" />
            </ToggleButton>
            <Button Command="{x:Bind SwitchWindowThemeCommand, Mode=OneTime}" ToolTipService.ToolTip="Switch theme">
              <FontIcon Glyph="&#xE793;"/>
            </Button>
          </StackPanel>
          
          <TextBlock VerticalAlignment="Bottom">
            <Run Text="{x:Bind sys:String.Format('{0} /', ViewModel.SelectedCardCollectionListViewModel.Cards.Count), Mode=OneWay}" />
            <Run Text="{x:Bind sys:String.Format('{0} cards loaded', ViewModel.SelectedCardCollectionListViewModel.TotalCount), Mode=OneWay}" />
          </TextBlock>
        </Grid>
        <!--#endregion-->

      </Grid>
      <!--#endregion-->

      <!--#region Card View -->
      <ScrollViewer 
        VerticalScrollBarVisibility="Auto"
        controls:DockPanel.Dock="Top">
        <ItemsRepeater
          x:Name="ListCardImageView"
          DataContext="{x:Bind ViewModel.SelectedCardCollectionListViewModel, Mode=OneWay}"
          ItemsSource="{Binding Cards, Mode=OneWay}"
          Style="{StaticResource GridItemsRepeaterStyle}">
          <ItemsRepeater.Layout>
            <UniformGridLayout MinItemWidth="230" ItemsStretch="Fill"/>
          </ItemsRepeater.Layout>
          <interactivity:Interaction.Behaviors>
            <helpers:ItemsRepeaterIncrementalLoading 
              LoadingOffset="200" 
              LoadCount="{x:Bind ViewModel.Importer.PageSize, Mode=OneTime}"
              IsLoadingMore="{x:Bind ViewModel.SelectedCardCollectionListViewModel.Cards.IsLoading, Mode=OneWay}"/>
          </interactivity:Interaction.Behaviors>
          <ItemsRepeater.ItemTemplate>
            <DataTemplate x:DataType="models:CardCollectionMTGCard">
              <localControls:CardCollectionCardImageView
                d:DataContext="{d:DesignInstance Type=listViewmodels:CardCollectionListViewModel}"
                DataContext="{Binding ElementName=ListCardImageView, Path=DataContext, Mode=OneTime}"
                Model="{x:Bind Mode=OneTime}"
                ShowPrintsCommand="{Binding ElementName=Root, Path=ViewModel.ShowCardPrintsCommand, Mode=OneTime}"
                SelectionMode="{Binding ElementName=SingleTapSelectionModeSwitch, Path=IsChecked, Converter={StaticResource BoolToSelectionModeConverter}}"
                OnSwitchOwnershipCommand="{Binding SwitchCardOwnershipCommand, Mode=OneTime}"/>
            </DataTemplate>
          </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
      </ScrollViewer>
      <!--#endregion-->

    </controls:DockPanel>
  </Grid>
</Page>
