<?xml version="1.0" encoding="utf-8"?>
<Page
  x:Class="MTGApplication.Features.DeckEditor.DeckEditorPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls" 
  xmlns:local="using:MTGApplication.Features.DeckEditor"
  xmlns:ui="using:CommunityToolkit.WinUI.UI"
  xmlns:models="using:MTGApplication.General.Models.Card"
  xmlns:customControls="using:MTGApplication.General.Views.Controls"
  xmlns:sys="using:System" 
  xmlns:triggers="using:CommunityToolkit.WinUI.UI.Triggers" 
  xmlns:helpers="using:MTGApplication.General.Views.BindingHelpers"
  mc:Ignorable="d"
  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
  KeyboardAcceleratorPlacementMode="Hidden">

  <Page.Resources>
    <!-- Setting button style on App.xaml did not work so it has to be done here -->
    <Style TargetType="Button" x:Key="PrimaryButtonStyle">
      <Setter Property="Background" Value="{ThemeResource SystemAccentColorLight3}" />
    </Style>
  </Page.Resources>
  
  <!--#region Keyboard Accelerators -->
  <!--NOTE: KeyboardAccelerators needs to be here because menu flyout accelerators does not work if the flyout has not been opened--> 
  <Page.KeyboardAccelerators>
    <KeyboardAccelerator Key="Z" Modifiers="Control" Invoked="UndoKeyboardAccelerator_Invoked"/>
    <KeyboardAccelerator Key="Y" Modifiers="Control" Invoked="RedoKeyboardAccelerator_Invoked"/>
    <KeyboardAccelerator Modifiers="Control" Key="S" Invoked="SaveDeckKeyboardAccelerator_Invoked" />
    <KeyboardAccelerator Modifiers="Control" Key="O" Invoked="OpenDeckKeyboardAccelerator_Invoked" />
    <KeyboardAccelerator Modifiers="Control" Key="N" Invoked="NewDeckKeyboardAccelerator_Invoked" />
    <KeyboardAccelerator Key="Escape" Invoked="ResetFiltersKeyboardAccelerator_Invoked" />
  </Page.KeyboardAccelerators>
  <!--#endregion-->

  <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
    
    <!--#region Visual State Manager -->
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup x:Name="DeckNameTitleSaveState">
        <!--NOTE: Changes deck name text to "Unsaved", if the deck has no name-->
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.DeckName, Mode=OneWay}" To="{x:Bind sys:String.Empty}"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SelectedDeckNameTitle.Text" Value="Unsaved"/>
            <Setter Target="SelectedDeckNameTitle.FontStyle" Value="Italic"/>
            <Setter Target="SelectedDeckNameTitle.Foreground" Value="LightGray"/>
          </VisualState.Setters>
        </VisualState>

        <!--NOTE: Changes deck name text to different color to show that the deck has unsaved changes-->
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.HasUnsavedChanges, Mode=OneWay}" To="True"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SelectedDeckNameTitle.Foreground" Value="{ThemeResource SystemAccentColorLight1}"/>
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    <!--#endregion-->

    <controls:DockPanel 
      LastChildFill="True" 
      Padding="0 0 10 10" 
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

      <!--#region Sidebar -->
      <TabView 
        x:Name="SidebarTabs"
        controls:DockPanel.Dock="Right"
        IsAddTabButtonVisible="False" 
        Width="250" 
        Margin="10 7 0 0" 
        HorizontalAlignment="Stretch" 
        VerticalAlignment="Stretch"
        BorderThickness="0 2 0 0"
        BorderBrush="{ThemeResource RegionColor}"
        AllowDropTabs="False"
        CanDragTabs="False"
        CanReorderTabs="False">
        <TabView.Resources>
          <!-- NOTE: Disables entrance transitions -->
          <Style TargetType="TabViewListView">
            <Setter Property="ItemContainerTransitions">
              <Setter.Value>
                <TransitionCollection/>
              </Setter.Value>
            </Setter>
          </Style>
        </TabView.Resources>
        <TabViewItem Header="Side lists" IsClosable="False">

          <!--#region Side Lists -->
          <Grid RowSpacing="5" Margin="0 5 0 0">
            <Grid.RowDefinitions>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Vertical">

              <!--#region Commander / Partner -->
              <local:CommanderTextView 
                PrefixText="Commander: "
                Model="{x:Bind ViewModel.CommanderViewModel.Card, Mode=OneWay}"
                EdhrecButtonClick="{x:Bind ViewModel.OpenEDHRECWebsiteCommandCommand, Mode=OneTime}"
                DeleteButtonClick="{x:Bind ViewModel.CommanderViewModel.RemoveCommand, Mode=OneTime}"
                ChangePrintCommand="{x:Bind ViewModel.CommanderViewModel.ChangeCardPrintCommand, Mode=OneTime}"
                CanDrag="True"
                AllowDrop="True"
                DragCopyCaptionText="Copy to Commander"
                DragMoveCaptionText="Move to Commander"
                OnDropCopy="{x:Bind ViewModel.CommanderViewModel.ChangeCommand, Mode=OneTime}"
                OnDropRemove="{x:Bind ViewModel.CommanderViewModel.RemoveCommand, Mode=OneTime}"
                OnDropBeginMoveFrom="{x:Bind ViewModel.CommanderViewModel.BeginMoveFromCommand, Mode=OneTime}"
                OnDropBeginMoveTo="{x:Bind ViewModel.CommanderViewModel.BeginMoveToCommand, Mode=OneTime}"
                OnDropExecuteMove="{x:Bind ViewModel.CommanderViewModel.ExecuteMoveCommand, Mode=OneTime}"
                OnDropImport="{x:Bind ViewModel.CommanderViewModel.ImportCommand, Mode=OneTime}"
                HoverPreviewEnabled="True"/>
              <local:CommanderTextView 
                PrefixText="Partner: "
                Model="{x:Bind ViewModel.PartnerViewModel.Card, Mode=OneWay}"
                EdhrecButtonClick="{x:Bind ViewModel.OpenEDHRECWebsiteCommandCommand, Mode=OneTime}"
                DeleteButtonClick="{x:Bind ViewModel.PartnerViewModel.RemoveCommand, Mode=OneTime}"
                ChangePrintCommand="{x:Bind ViewModel.CommanderViewModel.ChangeCardPrintCommand, Mode=OneTime}"
                CanDrag="True"
                AllowDrop="True"
                DragCopyCaptionText="Copy to Partner"
                DragMoveCaptionText="Move to Partner"
                OnDropCopy="{x:Bind ViewModel.PartnerViewModel.ChangeCommand, Mode=OneTime}"
                OnDropRemove="{x:Bind ViewModel.PartnerViewModel.RemoveCommand, Mode=OneTime}"
                OnDropBeginMoveFrom="{x:Bind ViewModel.PartnerViewModel.BeginMoveFromCommand, Mode=OneTime}"
                OnDropBeginMoveTo="{x:Bind ViewModel.PartnerViewModel.BeginMoveToCommand, Mode=OneTime}"
                OnDropExecuteMove="{x:Bind ViewModel.PartnerViewModel.ExecuteMoveCommand, Mode=OneTime}"
                OnDropImport="{x:Bind ViewModel.PartnerViewModel.ImportCommand, Mode=OneTime}"
                HoverPreviewEnabled="True"/>
              <!--#endregion-->

            </StackPanel>

            <!--#region Maybelist -->
            <customControls:LinedHeader Grid.Row="1">
              <customControls:LinedHeader.Header>
                <TextBlock Text="Maybe">
                  <TextBlock.ContextFlyout>
                    <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
                      <MenuFlyoutItem Command="{x:Bind ViewModel.MaybeCardList.ImportCardsCommand, Mode=OneTime}" Text="Import..."/>
                      <MenuFlyoutSubItem Text="Export...">
                        <MenuFlyoutItem Command="{x:Bind ViewModel.MaybeCardList.ExportCommand, Mode=OneTime}" CommandParameter="Name" Text="By Name"/>
                        <MenuFlyoutItem Command="{x:Bind ViewModel.MaybeCardList.ExportCommand, Mode=OneTime}" CommandParameter="Id" Text="By Id"/>
                      </MenuFlyoutSubItem>
                      <MenuFlyoutItem Command="{x:Bind ViewModel.MaybeCardList.ClearCommand, Mode=OneTime}" Text="Clear" Background="IndianRed"/>
                    </MenuFlyout>
                  </TextBlock.ContextFlyout>
                </TextBlock>
              </customControls:LinedHeader.Header>
            </customControls:LinedHeader>
            <local:AdvancedCardListView
              x:Name="MaybeCardsListView"
              Grid.Row="2"
              DataContext="{x:Bind ViewModel.MaybeCardList, Mode=OneWay}"
              ItemsSource="{Binding Cards, Mode=OneWay}"
              SortProperties="{x:Bind ViewModel.CardSorter.SortProperties, Mode=OneWay}"
              FilterProperties="{x:Bind ViewModel.CardFilters, Mode=OneWay}"
              Style="{StaticResource MTGListViewStyle}"
              SelectionMode="Single"
              CanDragItems="True"
              AllowDrop="True"
              OnDropCopy="{x:Bind ViewModel.MaybeCardList.AddCardCommand, Mode=OneWay}"
              OnDropRemove="{x:Bind ViewModel.MaybeCardList.RemoveCardCommand, Mode=OneWay}"
              OnDropImport="{x:Bind ViewModel.MaybeCardList.ImportCardsCommand, Mode=OneWay}"
              OnDropBeginMoveFrom="{x:Bind ViewModel.MaybeCardList.BeginMoveFromCommand, Mode=OneWay}"
              OnDropBeginMoveTo="{x:Bind ViewModel.MaybeCardList.BeginMoveToCommand, Mode=OneWay}"
              OnDropExecuteMove="{x:Bind ViewModel.MaybeCardList.ExecuteMoveCommand, Mode=OneWay}"
              LosingFocus="ListView_LosingFocus">
              <local:AdvancedCardListView.KeyboardAccelerators>
                <KeyboardAccelerator Key="Delete" Invoked="DeleteCardKeyboardAccelerator_Invoked"/>
              </local:AdvancedCardListView.KeyboardAccelerators>
              <local:AdvancedCardListView.ItemTemplate>
                <DataTemplate x:DataType="models:MTGCard">
                  <local:DeckEditorCardTextView
                    d:DataContext="{d:DesignInstance Type=local:CardListViewModel}"
                    DataContext="{Binding ElementName=MaybeCardsListView, Path=DataContext, Mode=OneTime}"
                    Model="{x:Bind Mode=OneTime}"
                    SetIconVisible="False"
                    TypeLineVisible="False"
                    HoverPreviewEnabled="True"
                    DeleteButtonClick="{Binding RemoveCardCommand, Mode=OneTime}"
                    CountChangeCommand="{Binding ChangeCardCountCommand, Mode=OneTime}"
                    ChangePrintCommand="{Binding ChangeCardPrintCommand, Mode=OneTime}"/>
                </DataTemplate>
              </local:AdvancedCardListView.ItemTemplate>
            </local:AdvancedCardListView>
            <!--#endregion-->

            <!--#region Wishlist -->
            <customControls:LinedHeader Grid.Row="3">
              <customControls:LinedHeader.Header>
                <TextBlock Text="Wishlist">
                  <TextBlock.ContextFlyout>
                    <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
                      <MenuFlyoutItem Command="{x:Bind ViewModel.WishCardList.ImportCardsCommand, Mode=OneTime}" Text="Import..."/>
                      <MenuFlyoutSubItem Text="Export...">
                        <MenuFlyoutItem Command="{x:Bind ViewModel.WishCardList.ExportCommand, Mode=OneTime}" CommandParameter="Name" Text="By Name"/>
                        <MenuFlyoutItem Command="{x:Bind ViewModel.WishCardList.ExportCommand, Mode=OneTime}" CommandParameter="Id" Text="By Id"/>
                      </MenuFlyoutSubItem>
                      <MenuFlyoutItem Command="{x:Bind ViewModel.WishCardList.ClearCommand, Mode=OneTime}" Text="Clear" Background="IndianRed"/>
                    </MenuFlyout>
                  </TextBlock.ContextFlyout>
                </TextBlock>
              </customControls:LinedHeader.Header>
            </customControls:LinedHeader>
            <local:AdvancedCardListView
              x:Name="WishCardsListView"
              Grid.Row="4"
              DataContext="{x:Bind ViewModel.WishCardList, Mode=OneWay}"
              ItemsSource="{Binding Cards, Mode=OneWay}"
              SortProperties="{x:Bind ViewModel.CardSorter.SortProperties, Mode=OneWay}"
              FilterProperties="{x:Bind ViewModel.CardFilters, Mode=OneWay}"
              Style="{StaticResource MTGListViewStyle}"
              SelectionMode="Single"
              CanDragItems="True"
              AllowDrop="True"
              OnDropCopy="{x:Bind ViewModel.WishCardList.AddCardCommand, Mode=OneWay}"
              OnDropRemove="{x:Bind ViewModel.WishCardList.RemoveCardCommand, Mode=OneWay}"
              OnDropImport="{x:Bind ViewModel.WishCardList.ImportCardsCommand, Mode=OneWay}"
              OnDropBeginMoveFrom="{x:Bind ViewModel.WishCardList.BeginMoveFromCommand, Mode=OneWay}"
              OnDropBeginMoveTo="{x:Bind ViewModel.WishCardList.BeginMoveToCommand, Mode=OneWay}"
              OnDropExecuteMove="{x:Bind ViewModel.WishCardList.ExecuteMoveCommand, Mode=OneWay}"
              LosingFocus="ListView_LosingFocus">
              <local:AdvancedCardListView.KeyboardAccelerators>
                <KeyboardAccelerator Key="Delete" Invoked="DeleteCardKeyboardAccelerator_Invoked"/>
              </local:AdvancedCardListView.KeyboardAccelerators>
              <local:AdvancedCardListView.ItemTemplate>
                <DataTemplate x:DataType="models:MTGCard">
                  <local:DeckEditorCardTextView
                    d:DataContext="{d:DesignInstance Type=local:CardListViewModel}"
                    DataContext="{Binding ElementName=WishCardsListView, Path=DataContext, Mode=OneTime}"
                    Model="{x:Bind Mode=OneTime}"
                    SetIconVisible="False"
                    TypeLineVisible="False"
                    HoverPreviewEnabled="True"
                    DeleteButtonClick="{Binding RemoveCardCommand, Mode=OneTime}"
                    CountChangeCommand="{Binding ChangeCardCountCommand, Mode=OneTime}"
                    ChangePrintCommand="{Binding ChangeCardPrintCommand, Mode=OneTime}"/>
                </DataTemplate>
              </local:AdvancedCardListView.ItemTemplate>
            </local:AdvancedCardListView>
            <!--#endregion-->

            <!--#region Removelist -->
            <customControls:LinedHeader Grid.Row="5">
              <customControls:LinedHeader.Header>
                <TextBlock Text="Remove">
                  <TextBlock.ContextFlyout>
                    <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
                      <MenuFlyoutItem Command="{x:Bind ViewModel.RemoveCardList.ImportCardsCommand, Mode=OneTime}" Text="Import..."/>
                      <MenuFlyoutSubItem Text="Export...">
                        <MenuFlyoutItem Command="{x:Bind ViewModel.RemoveCardList.ExportCommand, Mode=OneTime}" CommandParameter="Name" Text="By Name"/>
                        <MenuFlyoutItem Command="{x:Bind ViewModel.RemoveCardList.ExportCommand, Mode=OneTime}" CommandParameter="Id" Text="By Id"/>
                      </MenuFlyoutSubItem>
                      <MenuFlyoutItem Command="{x:Bind ViewModel.RemoveCardList.ClearCommand, Mode=OneTime}" Text="Clear" Background="IndianRed"/>
                    </MenuFlyout>
                  </TextBlock.ContextFlyout>
                </TextBlock>
              </customControls:LinedHeader.Header>
            </customControls:LinedHeader>
            <local:AdvancedCardListView
              x:Name="RemoveCardsListView"
              Grid.Row="6"
              DataContext="{x:Bind ViewModel.RemoveCardList, Mode=OneWay}"
              ItemsSource="{Binding Cards, Mode=OneWay}"
              SortProperties="{x:Bind ViewModel.CardSorter.SortProperties, Mode=OneWay}"
              FilterProperties="{x:Bind ViewModel.CardFilters, Mode=OneWay}"
              Style="{StaticResource MTGListViewStyle}"
              SelectionMode="Single"
              CanDragItems="True"
              AllowDrop="True"
              OnDropCopy="{x:Bind ViewModel.RemoveCardList.AddCardCommand, Mode=OneWay}"
              OnDropRemove="{x:Bind ViewModel.RemoveCardList.RemoveCardCommand, Mode=OneWay}"
              OnDropImport="{x:Bind ViewModel.RemoveCardList.ImportCardsCommand, Mode=OneWay}"
              OnDropBeginMoveFrom="{x:Bind ViewModel.RemoveCardList.BeginMoveFromCommand, Mode=OneWay}"
              OnDropBeginMoveTo="{x:Bind ViewModel.RemoveCardList.BeginMoveToCommand, Mode=OneWay}"
              OnDropExecuteMove="{x:Bind ViewModel.RemoveCardList.ExecuteMoveCommand, Mode=OneWay}"
              LosingFocus="ListView_LosingFocus">
              <local:AdvancedCardListView.KeyboardAccelerators>
                <KeyboardAccelerator Key="Delete" Invoked="DeleteCardKeyboardAccelerator_Invoked"/>
              </local:AdvancedCardListView.KeyboardAccelerators>
              <local:AdvancedCardListView.ItemTemplate>
                <DataTemplate x:DataType="models:MTGCard">
                  <local:DeckEditorCardTextView
                    d:DataContext="{d:DesignInstance Type=local:CardListViewModel}"
                    DataContext="{Binding ElementName=RemoveCardsListView, Path=DataContext, Mode=OneTime}"
                    Model="{x:Bind Mode=OneTime}"
                    SetIconVisible="False"
                    TypeLineVisible="False"
                    HoverPreviewEnabled="True"
                    DeleteButtonClick="{Binding RemoveCardCommand, Mode=OneTime}"
                    CountChangeCommand="{Binding ChangeCardCountCommand, Mode=OneTime}"
                    ChangePrintCommand="{Binding ChangeCardPrintCommand, Mode=OneTime}"/>
                </DataTemplate>
              </local:AdvancedCardListView.ItemTemplate>
            </local:AdvancedCardListView>
            <!--#endregion-->

          </Grid>
          <!--#endregion Side Lists-->

        </TabViewItem>
        <TabViewItem Header="Info" IsClosable="False">
          <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="0 5 0 0" Orientation="Vertical" Spacing="5">
              
              <!--#region Side Buttons -->
              <TextBlock>
                <Run Text="Price:" />
                <Run Text="{x:Bind helpers:Format.EuroToString(ViewModel.DeckPrice, 0), Mode=OneWay}" />
              </TextBlock>
              <StackPanel Orientation="Horizontal" Spacing="10">
                <Button Content="Tokens" Command="{x:Bind ViewModel.ShowDeckTokensCommand, Mode=OneTime}" Style="{StaticResource PrimaryButtonStyle}"/>
                <Button Content="EDHREC" Command="{x:Bind ViewModel.OpenEdhrecSearchWindowCommand, Mode=OneTime}" Style="{StaticResource PrimaryButtonStyle}"/>
                <Button Content="Playtest" Command="{x:Bind ViewModel.OpenPlaytestWindowCommand, Mode=OneTime}" Style="{StaticResource PrimaryButtonStyle}"/>
              </StackPanel>
            <!--#endregion-->
            
            <!--#region Charts -->
            <customControls:LinedHeader>
              <customControls:LinedHeader.Header>
                <TextBlock Text="Mana Curve"/>
              </customControls:LinedHeader.Header>
              <local:ManaCurveChart Cards="{x:Bind ViewModel.DeckCardList.Cards, Mode=OneWay}" Height="250"/>
            </customControls:LinedHeader>
            <!--#endregion Charts-->
            
            </StackPanel>
          </ScrollViewer>



        </TabViewItem>
      </TabView>
      <!--#endregion-->

      <!--#region Top Bar -->
      <Grid 
        controls:DockPanel.Dock="Top" 
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
        BorderThickness="0 0 0 1"
        BorderBrush="{ThemeResource RegionColor}">

        <!--#region Commands -->
        <StackPanel Orientation="Horizontal">
          <CommandBar IsOpen="False" DefaultLabelPosition="Right">

            <!--#region File -->
            <AppBarButton Icon="OpenFile" Label="File">
              <AppBarButton.Flyout>
                <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
                  <MenuFlyoutItem Command="{x:Bind ViewModel.NewDeckCommand, Mode=OneTime}" Icon="NewFolder" Text="New" KeyboardAcceleratorTextOverride="Ctrl+N"/>
                  <MenuFlyoutItem Command="{x:Bind ViewModel.OpenDeckCommand, Mode=OneTime}" Icon="OpenFile" Text="Open..." KeyboardAcceleratorTextOverride="Ctrl+O"/>
                  <MenuFlyoutItem Command="{x:Bind ViewModel.SaveDeckCommand, Mode=OneTime}" Icon="Save" Text="Save..." KeyboardAcceleratorTextOverride="Ctrl+S"/>
                  <MenuFlyoutSeparator/>
                  <MenuFlyoutItem Command="{x:Bind ViewModel.DeleteDeckCommand, Mode=OneTime}" Background="IndianRed" Icon="Delete" Text="Delete"/>
                </MenuFlyout>
              </AppBarButton.Flyout>
            </AppBarButton>
            <!--#endregion-->

            <!--#region Edit -->
            <AppBarButton Icon="Edit" Label="Edit">
              <AppBarButton.Flyout>
                <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
                  <MenuFlyoutItem Command="{x:Bind ViewModel.UndoCommand, Mode=OneTime}" Icon="Undo" Text="Undo" KeyboardAcceleratorTextOverride="Ctrl+Z"/>
                  <MenuFlyoutItem Command="{x:Bind ViewModel.RedoCommand, Mode=OneTime}" Icon="Redo" Text="Redo" KeyboardAcceleratorTextOverride="Ctrl+Y"/>
                </MenuFlyout>
              </AppBarButton.Flyout>
            </AppBarButton>
            <!--#endregion-->

            <AppBarSeparator/>

            <!--#region Zoom -->
            <AppBarButton Icon="ZoomIn" Label="Zoom">
              <AppBarButton.Flyout>
                <Flyout AreOpenCloseAnimationsEnabled="False">
                  <Slider x:Name="CardViewImageSizeSlider" Header="Card size" Value="250" Width="200" HorizontalAlignment="Left" Maximum="350" Minimum="140" SnapsTo="Ticks" TickFrequency="10" TickPlacement="Outside"/>
                </Flyout>
              </AppBarButton.Flyout>
            </AppBarButton>
            <!--#endregion-->

            <!--#region Display -->
            <AppBarButton Icon="PreviewLink" ToolTipService.ToolTip="Display" Label="Display">
              <AppBarButton.Flyout>
                <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
                  <RadioMenuFlyoutItem IsChecked="{x:Bind DeckImageViewVisible, Mode=OneWay}" Command="{x:Bind SetDeckDisplayTypeCommand, Mode=OneWay}" CommandParameter="Image" Text="Images" GroupName="DeckDisplayCheck" Icon="{ui:SymbolIcon Symbol=Pictures}" />
                  <RadioMenuFlyoutItem IsChecked="{x:Bind DeckTextViewVisible, Mode=OneWay}" Command="{x:Bind SetDeckDisplayTypeCommand, Mode=OneWay}" CommandParameter="Text" Text="Text" GroupName="DeckDisplayCheck" Icon="{ui:SymbolIcon Symbol=List}" />
                </MenuFlyout>
              </AppBarButton.Flyout>
            </AppBarButton>
            <!--#endregion-->

            <!--#region Sort -->
            <AppBarButton Icon="Sort" Label="Sort" AutomationProperties.Name="Order">
              <AppBarButton.Flyout>
                <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSortDirectionCommand, Mode=OneTime}" CommandParameter="Ascending" Text="Ascending" GroupName="DirectionGroup" IsChecked="True"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSortDirectionCommand, Mode=OneTime}" CommandParameter="Descending" Text="Descending" GroupName="DirectionGroup" />
                  <MenuFlyoutSeparator/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangePrimarySortPropertyCommand, Mode=OneTime}" CommandParameter="CMC" Text="CMC" GroupName="PrimaryDeckSortProperty" IsChecked="True"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangePrimarySortPropertyCommand, Mode=OneTime}" CommandParameter="Name"  Text="Name" GroupName="PrimaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangePrimarySortPropertyCommand, Mode=OneTime}" CommandParameter="Color" Text="Color" GroupName="PrimaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangePrimarySortPropertyCommand, Mode=OneTime}" CommandParameter="SpellType" Text="Type" GroupName="PrimaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangePrimarySortPropertyCommand, Mode=OneTime}" CommandParameter="Rarity" Text="Rarity" GroupName="PrimaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangePrimarySortPropertyCommand, Mode=OneTime}" CommandParameter="Set" Text="Set" GroupName="PrimaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangePrimarySortPropertyCommand, Mode=OneTime}" CommandParameter="Count" Text="Count" GroupName="PrimaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangePrimarySortPropertyCommand, Mode=OneTime}" CommandParameter="Price" Text="Price" GroupName="PrimaryDeckSortProperty"/>
                  <MenuFlyoutSeparator />
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSecondarySortPropertyCommand, Mode=OneTime}" CommandParameter="CMC" Text="CMC" GroupName="SecondaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSecondarySortPropertyCommand, Mode=OneTime}" CommandParameter="Name"  Text="Name" GroupName="SecondaryDeckSortProperty" IsChecked="True"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSecondarySortPropertyCommand, Mode=OneTime}" CommandParameter="Color" Text="Color" GroupName="SecondaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSecondarySortPropertyCommand, Mode=OneTime}" CommandParameter="SpellType" Text="Type" GroupName="SecondaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSecondarySortPropertyCommand, Mode=OneTime}" CommandParameter="Rarity" Text="Rarity" GroupName="SecondaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSecondarySortPropertyCommand, Mode=OneTime}" CommandParameter="Set" Text="Set" GroupName="SecondaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSecondarySortPropertyCommand, Mode=OneTime}" CommandParameter="Count" Text="Count" GroupName="SecondaryDeckSortProperty"/>
                  <RadioMenuFlyoutItem Command="{x:Bind ViewModel.CardSorter.ChangeSecondarySortPropertyCommand, Mode=OneTime}" CommandParameter="Price" Text="Price" GroupName="SecondaryDeckSortProperty"/>
                </MenuFlyout>
              </AppBarButton.Flyout>
            </AppBarButton>
            <!--#endregion-->

            <!--#region Filter -->
            <AppBarButton Icon="Filter" Label="Filter" AllowFocusOnInteraction="True">
              <AppBarButton.KeyboardAccelerators>
                <KeyboardAccelerator Key="F" Modifiers="Control"/>
              </AppBarButton.KeyboardAccelerators>
              <AppBarButton.Flyout>
                <Flyout AreOpenCloseAnimationsEnabled="False">
                  <StackPanel Orientation="Vertical" Spacing="10">
                    <TextBox Text="{x:Bind ViewModel.CardFilters.NameText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Filter name..."/>
                    <TextBox Text="{x:Bind ViewModel.CardFilters.TypeText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Filter type..."/>
                    <TextBox Text="{x:Bind ViewModel.CardFilters.OracleText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Filter oracle text..."/>
                    <NumberBox PlaceholderText="Filter CMC..." SpinButtonPlacementMode="Hidden" Value="{x:Bind ViewModel.CardFilters.Cmc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <StackPanel Orientation="Horizontal" Spacing="5">
                      <ToggleButton Content="W" ToolTipService.ToolTip="White" IsChecked="{x:Bind ViewModel.CardFilters.White, Mode=TwoWay}"/>
                      <ToggleButton Content="U" ToolTipService.ToolTip="Blue" IsChecked="{x:Bind ViewModel.CardFilters.Blue, Mode=TwoWay}"/>
                      <ToggleButton Content="B" ToolTipService.ToolTip="Black" IsChecked="{x:Bind ViewModel.CardFilters.Black, Mode=TwoWay}"/>
                      <ToggleButton Content="R" ToolTipService.ToolTip="Red" IsChecked="{x:Bind ViewModel.CardFilters.Red, Mode=TwoWay}"/>
                      <ToggleButton Content="G" ToolTipService.ToolTip="Green" IsChecked="{x:Bind ViewModel.CardFilters.Green, Mode=TwoWay}"/>
                      <ToggleButton Content="C" ToolTipService.ToolTip="Colorless" IsChecked="{x:Bind ViewModel.CardFilters.Colorless, Mode=TwoWay}"/>
                    </StackPanel>
                    <RadioButtons Header="Color group" MaxColumns="3" SelectedIndex="0">
                      <RadioButton Content="All" GroupName="ColorGroup" Command="{x:Bind ViewModel.CardFilters.ChangeColorGroupCommand, Mode=OneTime}" CommandParameter="All"/>
                      <RadioButton Content="Mono" GroupName="ColorGroup" Command="{x:Bind ViewModel.CardFilters.ChangeColorGroupCommand, Mode=OneTime}" CommandParameter="Mono"/>
                      <RadioButton Content="Multi" GroupName="ColorGroup" Command="{x:Bind ViewModel.CardFilters.ChangeColorGroupCommand, Mode=OneTime}" CommandParameter="Multi"/>
                    </RadioButtons>
                    <Button Content="Reset filters" Command="{x:Bind ViewModel.CardFilters.ResetCommand, Mode=OneTime}"/>
                  </StackPanel>
                </Flyout>
              </AppBarButton.Flyout>
            </AppBarButton>
            <!--#endregion-->

            <AppBarElementContainer VerticalAlignment="Center">
              <ProgressRing IsActive="{x:Bind ViewModel.IsBusy, Mode=OneWay}" Margin="5 0 5 0"/>
            </AppBarElementContainer>
          </CommandBar>
        </StackPanel>
        <!--#endregion-->

        <!--#region Deck Info -->
        <StackPanel Orientation="Vertical" VerticalAlignment="Bottom" HorizontalAlignment="Right">
          <TextBlock x:Name="SelectedDeckNameTitle" Text="{x:Bind ViewModel.DeckName, Mode=OneWay}" FontWeight="Bold" HorizontalAlignment="Right"/>
          <TextBlock Text="{x:Bind sys:String.Format('{0} cards', ViewModel.DeckSize), Mode=OneWay}" HorizontalAlignment="Right"/>
          <StackPanel.ContextFlyout>
            <MenuFlyout AreOpenCloseAnimationsEnabled="False" Placement="Bottom">
              <MenuFlyoutItem Command="{x:Bind ViewModel.DeckCardList.ImportCardsCommand, Mode=OneTime}" Text="Import..."/>
              <MenuFlyoutSubItem Text="Export...">
                <MenuFlyoutItem Command="{x:Bind ViewModel.DeckCardList.ExportCommand, Mode=OneTime}" CommandParameter="Name" Text="By Name"/>
                <MenuFlyoutItem Command="{x:Bind ViewModel.DeckCardList.ExportCommand, Mode=OneTime}" CommandParameter="Id" Text="By Id"/>
              </MenuFlyoutSubItem>
              <MenuFlyoutItem Command="{x:Bind ViewModel.DeckCardList.ClearCommand, Mode=OneTime}" Text="Clear" Background="IndianRed"/>
            </MenuFlyout>
          </StackPanel.ContextFlyout>
        </StackPanel>
        <!--#endregion-->

      </Grid>
      <!--#endregion-->

      <!--#region Deck Card Views -->
      <Grid controls:DockPanel.Dock="Top">

        <!--#region Grid View -->
        <local:AdvancedAdaptiveCardGridView
          x:Name="DeckCardsGridView"
          DataContext="{x:Bind ViewModel.DeckCardList, Mode=OneWay}"
          ItemsSource="{Binding Cards, Mode=OneWay}"
          SortProperties="{x:Bind ViewModel.CardSorter.SortProperties, Mode=OneWay}"
          FilterProperties="{x:Bind ViewModel.CardFilters, Mode=OneWay}"
          Style="{StaticResource MTGAdaptiveGridViewStyle}"
          BorderBrush="{ThemeResource RegionColor}"
          Visibility="{x:Bind DeckImageViewVisible, Mode=OneWay}"
          SelectionMode="Single"
          BorderThickness="0"
          DesiredWidth="{Binding ElementName=CardViewImageSizeSlider, Path=Value, Mode=OneWay}"
          CanDragItems="True"
          AllowDrop="True"
          OnDropCopy="{x:Bind ViewModel.DeckCardList.AddCardCommand, Mode=OneWay}"
          OnDropRemove="{x:Bind ViewModel.DeckCardList.RemoveCardCommand, Mode=OneWay}"
          OnDropImport="{x:Bind ViewModel.DeckCardList.ImportCardsCommand, Mode=OneWay}"
          OnDropBeginMoveFrom="{x:Bind ViewModel.DeckCardList.BeginMoveFromCommand, Mode=OneWay}"
          OnDropBeginMoveTo="{x:Bind ViewModel.DeckCardList.BeginMoveToCommand, Mode=OneWay}"
          OnDropExecuteMove="{x:Bind ViewModel.DeckCardList.ExecuteMoveCommand, Mode=OneWay}"
          LosingFocus="ListView_LosingFocus">
          <local:AdvancedAdaptiveCardGridView.KeyboardAccelerators>
            <KeyboardAccelerator Key="Delete" Invoked="DeleteCardKeyboardAccelerator_Invoked"/>
          </local:AdvancedAdaptiveCardGridView.KeyboardAccelerators>
          <local:AdvancedAdaptiveCardGridView.ItemTemplate>
            <DataTemplate x:DataType="models:MTGCard">
              <local:DeckEditorCardImageView
                d:DataContext="{d:DesignInstance Type=local:CardListViewModel}"
                DataContext="{Binding ElementName=DeckCardsGridView, Path=DataContext, Mode=OneTime}"
                Model="{x:Bind Mode=OneTime}"
                DeleteButtonClick="{Binding RemoveCardCommand, Mode=OneTime}"
                CountChangeCommand="{Binding ChangeCardCountCommand, Mode=OneTime}"
                ChangePrintCommand="{Binding ChangeCardPrintCommand, Mode=OneTime}"/>
            </DataTemplate>
          </local:AdvancedAdaptiveCardGridView.ItemTemplate>
        </local:AdvancedAdaptiveCardGridView>
        <!--#endregion-->

        <!--#region List View -->
        <local:AdvancedCardListView
          x:Name="DeckCardsListView"
          DataContext="{x:Bind ViewModel.DeckCardList, Mode=OneWay}"
          ItemsSource="{Binding Cards, Mode=OneWay}"
          SortProperties="{x:Bind ViewModel.CardSorter.SortProperties, Mode=OneWay}"
          FilterProperties="{x:Bind ViewModel.CardFilters, Mode=OneWay}"
          Visibility="{x:Bind DeckTextViewVisible, Mode=OneWay}"
          SelectionMode="Single"
          CanDragItems="True"
          AllowDrop="True"
          OnDropCopy="{x:Bind ViewModel.DeckCardList.AddCardCommand, Mode=OneWay}"
          OnDropRemove="{x:Bind ViewModel.DeckCardList.RemoveCardCommand, Mode=OneWay}"
          OnDropImport="{x:Bind ViewModel.DeckCardList.ImportCardsCommand, Mode=OneWay}"
          OnDropBeginMoveFrom="{x:Bind ViewModel.DeckCardList.BeginMoveFromCommand, Mode=OneWay}"
          OnDropBeginMoveTo="{x:Bind ViewModel.DeckCardList.BeginMoveToCommand, Mode=OneWay}"
          OnDropExecuteMove="{x:Bind ViewModel.DeckCardList.ExecuteMoveCommand, Mode=OneWay}"
          LosingFocus="ListView_LosingFocus">
          <local:AdvancedCardListView.KeyboardAccelerators>
            <KeyboardAccelerator Key="Delete" Invoked="DeleteCardKeyboardAccelerator_Invoked"/>
          </local:AdvancedCardListView.KeyboardAccelerators>
          <local:AdvancedCardListView.ItemTemplate>
            <DataTemplate x:DataType="models:MTGCard">
              <local:DeckEditorCardTextView
                d:DataContext="{d:DesignInstance Type=local:CardListViewModel}"
                DataContext="{Binding ElementName=DeckCardsListView, Path=DataContext, Mode=OneTime}"
                Model="{x:Bind Mode=OneTime}" 
                HoverPreviewEnabled="True"
                DeleteButtonClick="{Binding RemoveCardCommand, Mode=OneTime}"
                CountChangeCommand="{Binding ChangeCardCountCommand, Mode=OneTime}"
                ChangePrintCommand="{Binding ChangeCardPrintCommand, Mode=OneTime}"/>
            </DataTemplate>
          </local:AdvancedCardListView.ItemTemplate>
        </local:AdvancedCardListView>
        <!--#endregion-->

      </Grid>
      <!--#endregion-->

    </controls:DockPanel>
  </Grid>
</Page>
