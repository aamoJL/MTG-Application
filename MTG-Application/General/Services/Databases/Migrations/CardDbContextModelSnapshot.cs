// <auto-generated />
using System;
using MTGApplication.General.Services.Databases.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MTGApplication.General.Databases
{
    [DbContext(typeof(CardDbContext))]
    partial class CardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1");

            modelBuilder.Entity("MTGApplication.General.Services.Databases.Repositories.CardCollectionRepository.Models.MTGCardCollectionDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MTGCardCollections");
                });

            modelBuilder.Entity("MTGApplication.General.Services.Databases.Repositories.CardCollectionRepository.Models.MTGCardCollectionListDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CollectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SearchQuery")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("MTGCardCollectionLists");
                });

            modelBuilder.Entity("MTGApplication.General.Services.Databases.Repositories.CardRepository.Models.MTGCardDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CollectionListId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CollectorNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckCardsId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckCommanderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckCommanderPartnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckMaybelistId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckRemovelistId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeckWishlistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OracleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ScryfallId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SetCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CollectionListId");

                    b.HasIndex("DeckCardsId");

                    b.HasIndex("DeckCommanderId")
                        .IsUnique();

                    b.HasIndex("DeckCommanderPartnerId")
                        .IsUnique();

                    b.HasIndex("DeckMaybelistId");

                    b.HasIndex("DeckRemovelistId");

                    b.HasIndex("DeckWishlistId");

                    b.ToTable("MTGCards");
                });

            modelBuilder.Entity("MTGApplication.General.Services.Databases.Repositories.DeckRepository.Models.MTGCardDeckDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MTGDecks");
                });

            modelBuilder.Entity("MTGApplication.General.Services.Databases.Repositories.CardCollectionRepository.Models.MTGCardCollectionListDTO", b =>
                {
                    b.HasOne("MTGApplication.General.Services.Databases.Repositories.CardCollectionRepository.Models.MTGCardCollectionDTO", null)
                        .WithMany("CollectionLists")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MTGApplication.General.Services.Databases.Repositories.CardRepository.Models.MTGCardDTO", b =>
                {
                    b.HasOne("MTGApplication.General.Services.Databases.Repositories.CardCollectionRepository.Models.MTGCardCollectionListDTO", null)
                        .WithMany("Cards")
                        .HasForeignKey("CollectionListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MTGApplication.General.Services.Databases.Repositories.DeckRepository.Models.MTGCardDeckDTO", null)
                        .WithMany("DeckCards")
                        .HasForeignKey("DeckCardsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MTGApplication.General.Services.Databases.Repositories.DeckRepository.Models.MTGCardDeckDTO", null)
                        .WithOne("Commander")
                        .HasForeignKey("MTGApplication.General.Services.Databases.Repositories.CardRepository.Models.MTGCardDTO", "DeckCommanderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MTGApplication.General.Services.Databases.Repositories.DeckRepository.Models.MTGCardDeckDTO", null)
                        .WithOne("CommanderPartner")
                        .HasForeignKey("MTGApplication.General.Services.Databases.Repositories.CardRepository.Models.MTGCardDTO", "DeckCommanderPartnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MTGApplication.General.Services.Databases.Repositories.DeckRepository.Models.MTGCardDeckDTO", null)
                        .WithMany("MaybelistCards")
                        .HasForeignKey("DeckMaybelistId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MTGApplication.General.Services.Databases.Repositories.DeckRepository.Models.MTGCardDeckDTO", null)
                        .WithMany("RemovelistCards")
                        .HasForeignKey("DeckRemovelistId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MTGApplication.General.Services.Databases.Repositories.DeckRepository.Models.MTGCardDeckDTO", null)
                        .WithMany("WishlistCards")
                        .HasForeignKey("DeckWishlistId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MTGApplication.General.Services.Databases.Repositories.CardCollectionRepository.Models.MTGCardCollectionDTO", b =>
                {
                    b.Navigation("CollectionLists");
                });

            modelBuilder.Entity("MTGApplication.General.Services.Databases.Repositories.CardCollectionRepository.Models.MTGCardCollectionListDTO", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("MTGApplication.General.Services.Databases.Repositories.DeckRepository.Models.MTGCardDeckDTO", b =>
                {
                    b.Navigation("Commander");

                    b.Navigation("CommanderPartner");

                    b.Navigation("DeckCards");

                    b.Navigation("MaybelistCards");

                    b.Navigation("RemovelistCards");

                    b.Navigation("WishlistCards");
                });
#pragma warning restore 612, 618
        }
    }
}
