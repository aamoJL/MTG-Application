<Page
  x:Class="MTGApplication.Views.Pages.DeckTestingPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls" 
  xmlns:customcontrols="using:MTGApplication.Views.Controls" 
  xmlns:viewmodels="using:MTGApplication.ViewModels"
  xmlns:helpers="using:MTGApplication.Views.BindingHelpers" 
  xmlns:triggers="using:CommunityToolkit.WinUI.UI.Triggers" xmlns:sys="using:System"
  mc:Ignorable="d"
  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

  <Grid Background="Transparent">
    <VisualStateManager.VisualStateGroups>

      <VisualStateGroup x:Name="LibraryVisibilityState">
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind LibraryVisibility, Mode=OneWay}" To="Visible"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="LibraryVisibilitySwitchButton.Content" Value="Hide library"/>
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

    </VisualStateManager.VisualStateGroups>

    <controls:DockPanel LastChildFill="True">
      <MenuBar controls:DockPanel.Dock="Top">
        <MenuBarItem Title="File">
          <MenuFlyoutItem Text="New Game" Command="{x:Bind MTGDeckTestingViewModel.NewGameCommand}"/>
        </MenuBarItem>
      </MenuBar>
      <Grid controls:DockPanel.Dock="Bottom" Height="200">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="auto"/>
          <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Padding="10 0 0 10">
          <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <customcontrols:LinedHeader Grid.Row="0" Margin="0 0 10 0">
            <customcontrols:LinedHeader.Header>
              <TextBlock Text="{x:Bind sys:String.Format('Turn {0}', MTGDeckTestingViewModel.TurnCount), Mode=OneWay}"/>
            </customcontrols:LinedHeader.Header>
          </customcontrols:LinedHeader>
          <Grid Grid.Row="1" BorderThickness="0 0 1 0" BorderBrush="{ThemeResource RegionBrush}" Padding="0 0 10 0 ">
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button Grid.Row="0" 
                    Command="{x:Bind MTGDeckTestingViewModel.DrawCommand}" 
                    Content="Draw a Card"
                    FontSize="24"
                    FontWeight="Bold"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch"
                    Margin="0 5 0 0"/>
            <Button Grid.Row="1" 
                    Command="{x:Bind MTGDeckTestingViewModel.NewTurnCommand}" 
                    Content="New Turn"
                    FontSize="24"
                    FontWeight="Bold"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch"
                    Margin="0 5"/>
          </Grid>
        </Grid>
        <Grid Grid.Column="1">
          <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <customcontrols:LinedHeader Grid.Row="0" Margin="10 0 10 0">
            <customcontrols:LinedHeader.Header>
              <TextBlock Text="{x:Bind sys:String.Format('Hand ({0})', MTGDeckTestingViewModel.Hand.Count), Mode=OneWay}"/>
            </customcontrols:LinedHeader.Header>
          </customcontrols:LinedHeader>
          <ListView Grid.Row="1"
                    ItemsSource="{x:Bind MTGDeckTestingViewModel.Hand}"
                    ScrollViewer.HorizontalScrollMode="Enabled"
                    ScrollViewer.HorizontalScrollBarVisibility="Visible"
                    ScrollViewer.IsHorizontalRailEnabled="True"
                    ScrollViewer.VerticalScrollMode="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    Padding="0 0 0 10"
                    PointerReleased="DroppableList_PointerReleased"
                    PointerEntered="Droppable_PointerEntered"
                    PointerExited="Droppable_PointerExited">
            <ListView.ItemsPanel>
              <ItemsPanelTemplate>
                <ItemsStackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
              </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
              <Style TargetType="ListViewItem">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="5 0 5 0"/>
              </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
              <DataTemplate x:DataType="viewmodels:MTGCardViewModel">
                <controls:ImageEx Source="{x:Bind SelectedFaceUri, Mode=OneWay}" 
                                  Style="{StaticResource PlaceholderImageStyle}"
                                  CornerRadius="7"
                                  PointerPressed="DraggableListItem_PointerPressed"
                                  PointerEntered="HandCard_PointerEntered"
                                  PointerMoved="HandCard_PointerMoved"
                                  PointerExited="HandCard_PointerExited">
                  <controls:ImageEx.ContextFlyout>
                    <MenuFlyout AreOpenCloseAnimationsEnabled="False">
                      <MenuFlyoutItem Command="{x:Bind FlipCardCommand}" Icon="sync" Text="Flip"/>
                    </MenuFlyout>
                  </controls:ImageEx.ContextFlyout>
                </controls:ImageEx>
              </DataTemplate>
            </ListView.ItemTemplate>
          </ListView>
        </Grid>
        <Grid Grid.Column="2">
          <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <customcontrols:LinedHeader Grid.Row="0" Margin="10 0 10 0">
            <customcontrols:LinedHeader.Header>
              <TextBlock Text="Command Zone"/>
            </customcontrols:LinedHeader.Header>
          </customcontrols:LinedHeader>
          <ListView Grid.Row="1"
                    ItemsSource="{x:Bind MTGDeckTestingViewModel.CommandZone}"
                    MaxWidth="300"
                    ScrollViewer.HorizontalScrollMode="Enabled"
                    ScrollViewer.HorizontalScrollBarVisibility="Visible"
                    ScrollViewer.IsHorizontalRailEnabled="True"
                    ScrollViewer.VerticalScrollMode="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    BorderBrush="{ThemeResource RegionBrush}"
                    BorderThickness="1 0 0 0"
                    Margin="0 0 0 10"
                    PointerReleased="DroppableList_PointerReleased"
                    PointerEntered="Droppable_PointerEntered"
                    PointerExited="Droppable_PointerExited">
            <ListView.ItemsPanel>
              <ItemsPanelTemplate>
                <ItemsStackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
              </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
              <Style TargetType="ListViewItem">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="5 0 5 0"/>
              </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
              <DataTemplate x:DataType="viewmodels:MTGCardViewModel">
                <controls:ImageEx Source="{x:Bind SelectedFaceUri, Mode=OneWay}" 
                                  Style="{StaticResource PlaceholderImageStyle}"
                                  CornerRadius="7"
                                  PointerPressed="DraggableListItem_PointerPressed"
                                  PointerEntered="HandCard_PointerEntered"
                                  PointerMoved="HandCard_PointerMoved"
                                  PointerExited="HandCard_PointerExited">
                  <controls:ImageEx.ContextFlyout>
                    <MenuFlyout AreOpenCloseAnimationsEnabled="False">
                      <MenuFlyoutItem Command="{x:Bind FlipCardCommand}" Icon="sync" Text="Flip"/>
                    </MenuFlyout>
                  </controls:ImageEx.ContextFlyout>
                </controls:ImageEx>
              </DataTemplate>
            </ListView.ItemTemplate>
          </ListView>
        </Grid>
        <Grid Grid.Column="3">
          <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <customcontrols:LinedHeader Grid.Row="0" Margin="10 0 10 0">
            <customcontrols:LinedHeader.Header>
              <TextBlock Text="Tokens"/>
            </customcontrols:LinedHeader.Header>
          </customcontrols:LinedHeader>
          <ListView Grid.Row="1"
                    ItemsSource="{x:Bind MTGDeckTestingViewModel.Tokens, Mode=OneWay}"
                    SelectionMode="None"
                    BorderBrush="{ThemeResource RegionBrush}"
                    BorderThickness="1 0 0 0"
                    Margin="0 0 0 10">
            <ListView.ItemTemplate>
              <DataTemplate x:DataType="viewmodels:MTGCardViewModel">
                <StackPanel Style="{StaticResource MTGListViewItemStyle}"
                            PointerEntered="CardListViewItem_PointerEntered"
                            PointerExited="CardListViewItem_PointerExited"
                            PointerMoved="CardListViewItem_PointerMoved"
                            PointerPressed="TokenListView_PointerPressed">
                  <StackPanel.ContextFlyout>
                    <MenuFlyout Placement="RightEdgeAlignedTop" AreOpenCloseAnimationsEnabled="False">
                      <MenuFlyoutItem Command="{x:Bind FlipCardCommand}" Icon="sync" Text="Flip"/>
                    </MenuFlyout>
                  </StackPanel.ContextFlyout>
                  <TextBlock VerticalAlignment="Center" Text="{x:Bind Model.Info.Name}" Width="200"/>
                </StackPanel>
              </DataTemplate>
            </ListView.ItemTemplate>
          </ListView>
        </Grid>
      </Grid>
      <Grid controls:DockPanel.Dock="Left" Width="200">
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="150"/>
          <RowDefinition Height="150"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
          <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <customcontrols:LinedHeader Grid.Row="0" Margin="10 0 10 0">
            <customcontrols:LinedHeader.Header>
              <TextBlock Text="{x:Bind sys:String.Format('Library ({0})', MTGDeckTestingViewModel.Library.Count), Mode=OneWay}"/>
            </customcontrols:LinedHeader.Header>
          </customcontrols:LinedHeader>
          <Grid Grid.Row="1" RowSpacing="10">
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <ListView Grid.Row="0"
                      ItemsSource="{x:Bind MTGDeckTestingViewModel.Library}"
                      SelectionMode="None"
                      PointerReleased="DroppableList_PointerReleased"
                      PointerEntered="Droppable_PointerEntered"
                      PointerExited="Droppable_PointerExited"
                      Visibility="{x:Bind LibraryVisibility, Mode=OneWay}">
              <ListView.ItemTemplate>
                <DataTemplate x:DataType="viewmodels:MTGCardViewModel">
                  <StackPanel Style="{StaticResource MTGListViewItemStyle}"
                              PointerEntered="CardListViewItem_PointerEntered"
                              PointerExited="CardListViewItem_PointerExited"
                              PointerMoved="CardListViewItem_PointerMoved"
                              PointerPressed="DraggableListItem_PointerPressed">
                    <StackPanel.ContextFlyout>
                      <MenuFlyout Placement="RightEdgeAlignedTop" AreOpenCloseAnimationsEnabled="False">
                        <MenuFlyoutItem Command="{x:Bind FlipCardCommand}" Icon="sync" Text="Flip"/>
                      </MenuFlyout>
                    </StackPanel.ContextFlyout>
                    <TextBlock VerticalAlignment="Center" Text="{x:Bind Model.Info.Name}" Width="200"/>
                  </StackPanel>
                </DataTemplate>
              </ListView.ItemTemplate>
            </ListView>
            <Grid Grid.Row="0" Visibility="{x:Bind helpers:VisibilityHelpers.VisibilityInversion(LibraryVisibility), Mode=OneWay}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid Grid.Row="0"
                    Background="Transparent"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch" 
                    Margin="10 5" 
                    BorderBrush="{ThemeResource RegionBrush}" 
                    BorderThickness="1"
                    PointerEntered="Droppable_PointerEntered"
                    PointerExited="Droppable_PointerExited"
                    PointerReleased="LibraryTop_PointerReleased">
                <TextBlock Text="Top" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{ThemeResource RegionBrush}"/>
              </Grid>
              <Grid Grid.Row="1" 
                    Background="Transparent"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch" 
                    Margin="10 5" 
                    BorderBrush="{ThemeResource RegionBrush}"
                    BorderThickness="1"
                    PointerEntered="Droppable_PointerEntered"
                    PointerExited="Droppable_PointerExited"
                    PointerReleased="LibraryBottom_PointerReleased">
                <TextBlock Text="Bottom" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{ThemeResource RegionBrush}"/>
              </Grid>
            </Grid>
            <StackPanel Grid.Row="1" Margin="10 0" Spacing="10">
              <Button HorizontalAlignment="Stretch"
                      Content="Shuffle"
                      Command="{x:Bind MTGDeckTestingViewModel.ShuffleCommand}"/>
              <Button x:Name="LibraryVisibilitySwitchButton" 
                      HorizontalAlignment="Stretch"
                      Command="{x:Bind LibraryVisibilitySwitchCommand}" 
                      Content="Show library"/>
            </StackPanel>
          </Grid>
        </Grid>
        <Grid Grid.Row="1">
          <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <customcontrols:LinedHeader Grid.Row="0" Margin="10 5 10 0">
            <customcontrols:LinedHeader.Header>
              <TextBlock Text="{x:Bind sys:String.Format('Graveyard ({0})', MTGDeckTestingViewModel.Graveyard.Count), Mode=OneWay}"/>
            </customcontrols:LinedHeader.Header>
          </customcontrols:LinedHeader>
          <ListView Grid.Row="1"
                    ItemsSource="{x:Bind MTGDeckTestingViewModel.Graveyard}"
                    SelectionMode="None"
                    PointerReleased="DroppableList_PointerReleased"
                    PointerEntered="Droppable_PointerEntered"
                    PointerExited="Droppable_PointerExited">
            <ListView.ItemTemplate>
              <DataTemplate x:DataType="viewmodels:MTGCardViewModel">
                <StackPanel Style="{StaticResource MTGListViewItemStyle}"
                            PointerEntered="CardListViewItem_PointerEntered"
                            PointerExited="CardListViewItem_PointerExited"
                            PointerMoved="CardListViewItem_PointerMoved"
                            PointerPressed="DraggableListItem_PointerPressed">
                  <StackPanel.ContextFlyout>
                    <MenuFlyout Placement="RightEdgeAlignedTop" AreOpenCloseAnimationsEnabled="False">
                      <MenuFlyoutItem Command="{x:Bind FlipCardCommand}" Icon="sync" Text="Flip"/>
                    </MenuFlyout>
                  </StackPanel.ContextFlyout>
                  <TextBlock VerticalAlignment="Center" Text="{x:Bind Model.Info.Name}" Width="200"/>
                </StackPanel>
              </DataTemplate>
            </ListView.ItemTemplate>
          </ListView>
        </Grid>
        <Grid Grid.Row="2">
          <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <customcontrols:LinedHeader Grid.Row="0" Margin="10 5 10 0">
            <customcontrols:LinedHeader.Header>
              <TextBlock Text="{x:Bind sys:String.Format('Exile ({0})', MTGDeckTestingViewModel.Exile.Count), Mode=OneWay}"/>
            </customcontrols:LinedHeader.Header>
          </customcontrols:LinedHeader>
          <ListView Grid.Row="1"
                    ItemsSource="{x:Bind MTGDeckTestingViewModel.Exile}"
                    SelectionMode="None"
                    PointerReleased="DroppableList_PointerReleased"
                    PointerEntered="Droppable_PointerEntered"
                    PointerExited="Droppable_PointerExited">
            <ListView.ItemTemplate>
              <DataTemplate x:DataType="viewmodels:MTGCardViewModel">
                <StackPanel Style="{StaticResource MTGListViewItemStyle}"
                            PointerEntered="CardListViewItem_PointerEntered"
                            PointerExited="CardListViewItem_PointerExited"
                            PointerMoved="CardListViewItem_PointerMoved"
                            PointerPressed="DraggableListItem_PointerPressed">
                  <StackPanel.ContextFlyout>
                    <MenuFlyout Placement="RightEdgeAlignedTop" AreOpenCloseAnimationsEnabled="False">
                      <MenuFlyoutItem Command="{x:Bind FlipCardCommand}" Icon="sync" Text="Flip"/>
                    </MenuFlyout>
                  </StackPanel.ContextFlyout>
                  <TextBlock VerticalAlignment="Center" Text="{x:Bind Model.Info.Name}" Width="200"/>
                </StackPanel>
              </DataTemplate>
            </ListView.ItemTemplate>
          </ListView>
        </Grid>
      </Grid>
      <Grid controls:DockPanel.Dock="Top">
        <Canvas x:Name="BattlefieldCanvas"
                Background="{ThemeResource AcrylicBackgroundFillColorBaseBrush}"
                xmlns:ui="using:CommunityToolkit.WinUI.UI"
                ui:UIElementExtensions.ClipToBounds="True"
                PointerReleased="BattlefieldCanvas_PointerReleased"
                PointerEntered="BattlefieldCanvas_PointerEntered"
                PointerExited="Droppable_PointerExited">
        </Canvas>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center" Background="{ThemeResource AppBarBackgroundThemeBrush}">
          <NumberBox Value="{x:Bind MTGDeckTestingViewModel.PlayerHP, Mode=TwoWay}" AcceptsExpression="True" SpinButtonPlacementMode="Hidden"/>
          <NumberBox Value="{x:Bind MTGDeckTestingViewModel.EnemyHP, Mode=TwoWay}" AcceptsExpression="True" SpinButtonPlacementMode="Hidden"/>
        </StackPanel>
      </Grid>
    </controls:DockPanel>
    <!--Preview image-->
    <customcontrols:MTGCardPreviewControl PreviewProperties="{x:Bind CardPreviewProperties, Mode=OneWay}"/>
    <Canvas>
      <controls:ImageEx x:Name="DragPreviewImage" 
                        MaxWidth="{x:Bind BattlefieldCardSize.X}"
                        MaxHeight="{x:Bind BattlefieldCardSize.Y}"
                        IsHitTestVisible="False" 
                        CornerRadius="12"
                        Visibility="Collapsed" 
                        PlaceholderStretch="Fill" 
                        CacheMode="BitmapCache" 
                        IsCacheEnabled="True"
                        Opacity=".5"
                        Style="{StaticResource PreviewImagePlaceholderStyle}"
                        RenderTransformOrigin="0.5,0.5">
        <controls:ImageEx.RenderTransform>
          <RotateTransform Angle="0"/>
        </controls:ImageEx.RenderTransform>
      </controls:ImageEx>
    </Canvas>
  </Grid>
</Page>
